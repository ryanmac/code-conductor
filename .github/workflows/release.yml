# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: ðŸŽ¼ Release Code Conductor

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Validate configuration
        run: |
          python .conductor/scripts/validate-config.py --strict

      - name: Get version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=v$VERSION" >> $GITHUB_OUTPUT

      - name: Verify VERSION file matches tag
        run: |
          FILE_VERSION=$(cat VERSION)
          TAG_VERSION="${{ steps.version.outputs.version }}"
          if [ "$FILE_VERSION" != "$TAG_VERSION" ]; then
            echo "VERSION file ($FILE_VERSION) doesn't match tag ($TAG_VERSION)"
            exit 1
          fi

      - name: Create release archive
        run: |
          # Create code-conductor template archive
          mkdir -p dist

          # Include core template files
          tar -czf dist/code-conductor-template-${{ steps.version.outputs.version }}.tar.gz \
            .conductor/ \
            examples/ \
            docs/ \
            setup.py \
            install.sh \
            README.md \
            CHANGELOG.md \
            VERSION \
            .gitignore

          # Create quick-start zip for GitHub releases
          zip -r dist/code-conductor-${{ steps.version.outputs.version }}.zip \
            .conductor/ \
            examples/ \
            docs/ \
            setup.py \
            install.sh \
            README.md \
            CHANGELOG.md \
            VERSION \
            .gitignore

      - name: Extract changelog for this version
        id: changelog
        run: |
          # Extract changelog section for this version
          VERSION="${{ steps.version.outputs.version }}"

          # Get content between this version and next version/unreleased
          awk "/## \[$VERSION\]/{flag=1;next}/## \[/{flag=0}flag" CHANGELOG.md > release_notes.md

          # If no specific changelog found, use generic message
          if [ ! -s release_notes.md ]; then
            echo "Release $VERSION" > release_notes.md
            echo "" >> release_notes.md
            echo "See CHANGELOG.md for details." >> release_notes.md
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag_name }}
          release_name: ðŸŽ¼ Code Conductor ${{ steps.version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false

      - name: Upload template archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/code-conductor-template-${{ steps.version.outputs.version }}.tar.gz
          asset_name: code-conductor-template-${{ steps.version.outputs.version }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload quick-start zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/code-conductor-${{ steps.version.outputs.version }}.zip
          asset_name: code-conductor-${{ steps.version.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Update installation URLs
        run: |
          echo "ðŸŽ‰ Release ${{ steps.version.outputs.version }} created!"
          echo ""
          echo "ðŸ“¦ Assets:"
          echo "- Template: code-conductor-template-${{ steps.version.outputs.version }}.tar.gz"
          echo "- Quick-start: code-conductor-${{ steps.version.outputs.version }}.zip"
          echo ""
          echo "ðŸš€ Installation:"
          echo "curl -sSL https://github.com/ryanmac/code-conductor/releases/download/${{ steps.version.outputs.tag_name }}/install.sh | bash"
          echo ""
          echo "ðŸ“š Documentation: https://github.com/ryanmac/code-conductor/blob/main/docs/USAGE.md" 